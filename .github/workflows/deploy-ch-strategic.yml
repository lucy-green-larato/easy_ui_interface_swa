name: build-test-deploy-ch-strategic

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test-ch-strategic:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # API: install, hygiene, tests
      - name: Install (api)
        run: npm ci
      - name: Hygiene
        run: |
          npm run audit
          npm run depcheck
          npm run lint
      - name: Tests
        run: npm test -- --coverage

      # Web: optional lint/build if you have a separate package.json there
      - name: Install (web)
        if: hashFiles('web/package.json') != ''
        working-directory: web
        run: npm ci
      - name: Build (web)
        if: hashFiles('web/package.json') != ''
        working-directory: web
        run: npm run build --if-present

      - name: Upload artifact (web)
        if: hashFiles('web/package.json') != ''
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: |
            web/dist
            web/build
            web/public
            web/src    # fallback if no build step; SWA can serve static
          if-no-files-found: warn

  deploy-ch-strategic:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
      id-token: write  # for OIDC with Azure
    steps:
      - uses: actions/checkout@v4

      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Static Web Apps deploy (build from repo; or provide app_location/api_location)
      - uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.SWA_DEPLOYMENT_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "web"            # path to your web app (adjust if different)
          api_location: "api"            # path to Functions
          output_location: "dist"        # if your web build outputs to /web/dist
          skip_app_build: false
          skip_api_build: false
          production_branch: "main"
          # Environment names auto-map: PRs -> preview, main -> production

      - uses: azure/logout@v2
